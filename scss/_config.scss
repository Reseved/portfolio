@use 'sass:color';

$primary-color: #444;
$secondary-color: #eece1a;
$show-home-image: true;
$home-image: url('../img/background.jpg');
$background-opacity: 0.9;

@mixin easeOut {
  transition: all 0.5s ease-out;
}

@mixin background {
  @if $show-home-image {
    &#bg-img {
      position: relative;
      background: $home-image;
      background-attachment: fixed;
      background-size: cover;

      &:after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        background: rgba($primary-color, $background-opacity);
      }
    }
  }
}

//Set Text Color
@function set-text-color($color) {
  @if (color.channel($color, 'lightness', $space: hsl) > 40) {
    @return #000; // dark text for light backgrounds
  } @else {
    @return #fff; // light text for dark backgrounds

    //color.channel($color, "lightness", $space: hsl) — извлекает 
    //значение светлоты из цвета, как раньше lightness($color), 
    //но современным способом.

    //$space: hsl указывает, что цвет должен быть преобразован в 
    //HSL-пространство, чтобы можно было получить "lightness".
  }
}

// media query mixins
@mixin mediaSm {
  @media screen and (max-width: 500px) {
    @content;
  }
}

@mixin mediaMd {
  @media screen and (max-width: 768px) {
    @content;
  }
}

@mixin mediaLg {
  @media screen and (min-width: 769px) and (max-width: 1170px) {
    @content;
  }
}

@mixin mediaXl {
  @media screen and (min-width: 1171px) {
    @content;
  }
}
